 それでは計算を始めます ここで、計算とはー     7
 掛け算と
 足し算です
 これを 全部に渡って行います                                  10
 この数字を 関数に入れます
 その結果が ここに出てきます
 そして次の 計算に打つ前に
 最初に１という項目を 追加しておきます
 1を足すことはありましたが 計算そのものは同じものです               15
 掛け算と 足し算です
 ここからの領域は 出力層と呼びます
 今回も関数の 中に入れます
 これまでの 流れで
 答えが得られます                                               20
 なぜ、これが可能だったでしょうか？ それはー
 この部分が用意されて いたからです
 つまり 今までの流れは
 誰かが作った この部分があるからです
 では この部分は                                               25
 どのように 作られるのでしょうか？
 その過程が、モデルを 「訓練」させる過程になります
 この過程のために あらかじめ用意された
 膨大なデータが 必要になります
 「ビッグデータ」が 最近重要だといわれる                           30
 理由でも あります
 訓練とは 簡単に言えばー
 正解のデータと どれほど離れているかを
 計算を持って 記録して行くことです
 その計算は 新しい関数をー                                      35
 用いて行います その関数がー
 「損失関数」です
 「訓練課程」では 入力されたデータが
 損失関数まで至り そこからー
 遡って 計算されていきます                                      40
 まずは 隠れ層と出力層の
 間にあった この領域からです
 ここで 計算とは
 微分を 意味します
 次に この領域も                                               45
 「偏微分」を行い 計算します
 そこで出来た この式を使い
 「誤差逆伝播」という 方法を使います
 ここで大事なのは これまでの出力が
 今度は「入力」に なるということです                             50
 そうやってできた この「bd」を
 隠れ層における 「誤差」だと言うことができます
 この例では 1層の隠れ層を使っていますが
 この層は何枚になっても 逆順に遡って
 計算することが できます                                       55
 そこで色々な 隠れ層のパターンも
 可能に なります
 ここまでで 損失関数に対する
 この部分 「重み行列」の
 偏微分の結果が 決まりましたので                                   60
 決まった順番によって 繰り返し計算して行くのみです
 まずこのこれまで使っていた 二つの関数を使って
 「予測値」を 計算し
 次に「誤差」を 計算します
 それから 逆順に                                           65
 計算し またもう一度
 計算します
 そうやって いよいよ
 このモデルの 特性、つまりー
 ０から９までの 数字を判別できるよう                            70
 この部分が 用意できるのです
 これが 数理モデルの
 「学習」と なります
 この例では データの全貌を
 目で見れるよう 画像を10 x 10 のデータにしましたが                  75
 実際は、これが もっと大きなデータの
 入力となり 精密な判別をするように
 なります
 さて
 長い時間                                                   80
 お疲れ様でした




        <picture number="0">
            <value target_surface="self.surface" />
            <value name="pic_7_1" />
            <value pic_file="images_main/img_1_1.png" />
            <value pic_size="164" />
            <value anim_duration="8000" />
            <value anim_type="SequentialPic" />
            <value anim_scaler_x="0.5" />
            <value anim_scaler_y="1.0" />
            <value position_x="1250" />
            <value position_y="550" />
            <value rotation="25" />
            <value visible="True" />
            <value align="Center" />
        </picture>


        <picture number="1">
            <value target_surface="self.surface" />
            <value name="pic_7_2" />
            <value pic_file="images_main/img_1_2.png" />
            <value pic_size="164" />
            <value anim_duration="8000" />
            <value anim_type="SequentialPic" />
            <value anim_scaler_x="0.5" />
            <value anim_scaler_y="1.0" />
            <value position_x="1900" />
            <value position_y="100" />
            <value rotation="-60" />
            <value visible="True" />
            <value align="Center" />
        </picture>


